#CUSTOM ===========================================================================================
server.domain=${SERVER_DOMAIN:localhost}
server.origin=${SERVER_ORIGIN:http://localhost}
#jwt.sign.key.location=${SIGN_KEY_LOCATION:privateKey.pem}
#jwt.verify.key.location=${VERIFY_KEY_LOCATION:publicKey.pem}
#jwt.encrypt.key.location=${ENCRYPT_KEY_LOCATION:publicKey.pem}
#jwt.decrypt.key.location=${DECRYPT_KEY_LOCATION:privateKey.pem}
jwt.sign.key.location=privateKey.pem
jwt.verify.key.location=publicKey.pem
jwt.encrypt.key.location=publicKey.pem
jwt.decrypt.key.location=privateKey.pem
#jwt.token.primary.expire=300
#jwt.token.refresh.expire=7200
jwt.token.primary.expire=10
jwt.token.refresh.expire=100

#DOCKER ===========================================================================================
quarkus.container-image.tag=link-1.0.0
quarkus.container-image.name=gq97a6/images
quarkus.container-image.group=

#WEBAPP ===========================================================================================
quarkus.http.port=80
quarkus.http.host=0.0.0.0

#DATABASE ===========================================================================================
quarkus.mongodb.connection-string = mongodb://root:1234@localhost:27017

#JWT ===========================================================================================
#Sign
smallrye.jwt.sign.key.location=${jwt.sign.key.location}
#Verify
mp.jwt.verify.publickey.location=${jwt.verify.key.location}
mp.jwt.verify.issuer=${server.domain}
#Encrypt and decrypt
smallrye.jwt.encrypt.key.location=${jwt.encrypt.key.location}
mp.jwt.decrypt.key.location=${jwt.decrypt.key.location}
#Other
mp.jwt.verify.clock.skew=1
mp.jwt.token.header=Cookie
mp.jwt.token.cookie=token

#AUTH ===========================================================================================
#quarkus.http.auth.permission.default.paths=/*
#quarkus.http.auth.permission.default.policy=authenticated
#quarkus.http.auth.permission.login.paths=/login
#quarkus.http.auth.permission.login.policy=permit

#Allow expired JWT tokens for endpoints without authentication
quarkus.http.auth.proactive=true

#quarkus.log.level=DEBUG